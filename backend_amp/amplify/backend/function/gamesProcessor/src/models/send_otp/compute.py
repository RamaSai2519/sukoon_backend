from shared.models.interfaces import SendOTPInput as Input, Output
from shared.models.constants import TestCreds
from shared.db.otp import get_otp_collection
from shared.configs import CONFIG as config
import threading
import requests
import string
import random


class Compute:
    def __init__(self, input: Input) -> None:
        self.input = input
        self.otp_string = "Dear user, use __OTP__ as One Time Password generated by Three Dots & Dash to log in to your Sukoon.Love account."

    def _send_otp_via_sms(self, phone_number, otp) -> str:
        query_params = config.SMS_API_CONFIG
        query_params["msg"] = self.otp_string.replace("__OTP__", otp)
        query_params["send_to"] = "91" + phone_number
        response = requests.get(url=config.SMS_API_URL,
                                params=query_params, verify=False)
        return True if response.text.startswith("success") else False

    def send_otp_via_whatsapp(self, phone_number, otp) -> str:
        template_name = "SIGN_IN_OTP"
        url = config.URL + "/actions/send_whatsapp"
        payload = {
            "template_name": template_name,
            "phone_number": phone_number,
            "parameters": {"otp": otp}
        }
        response = requests.post(url, json=payload)
        return True if response.status_code == 200 else False

    def generate_otp(self) -> tuple:
        otp_collection = get_otp_collection()
        record = otp_collection.find_one(
            {"phoneNumber": self.input.phone_number})
        if not record:
            otp = ''.join(random.choices(string.digits, k=self.input.length))
            otp_collection.insert_one({
                'phoneNumber': self.input.phone_number,
                'otp': otp,
            })
        else:
            otp = record.get("otp")
        return otp

    def compute(self) -> Output:
        if self.input.phone_number == TestCreds.phone_number:
            return Output()

        otp = self.generate_otp()
        threading.Thread(target=self._send_otp_via_sms,
                         args=(self.input.phone_number, otp)).start()
        threading.Thread(target=self.send_otp_via_whatsapp,
                         args=(self.input.phone_number, otp)).start()

        return Output(
            output_message='Triggering messages'
        )
